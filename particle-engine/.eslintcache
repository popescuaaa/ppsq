[{"/Users/andreipopescu/Documents/dev/ppsq/particle-engine/src/reportWebVitals.js":"1","/Users/andreipopescu/Documents/dev/ppsq/particle-engine/src/App.js":"2"},{"size":362,"mtime":1606564060260,"results":"3","hashOfConfig":"4"},{"size":1065,"mtime":1606565514753,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vy69i5",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/andreipopescu/Documents/dev/ppsq/particle-engine/src/reportWebVitals.js",[],"/Users/andreipopescu/Documents/dev/ppsq/particle-engine/src/App.js",["11"],"import React, {useEffect, useState} from 'react';\nimport * as THREE from 'three';\n\nconst App = () => {\n    useEffect( () => {\n\n        let width = window.innerWidth;\n        let height = window.innerHeight;\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera( 75, width / height, 0.1, 1000 );\n        const renderer = new THREE.WebGLRenderer();\n\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        document.body.appendChild( renderer.domElement );\n\n        const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n        const cube = new THREE.Mesh( geometry, material );\n\n        scene.add( cube );\n        camera.position.z = 5;\n\n        const animate = () => {\n            requestAnimationFrame( animate );\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    });\n\n    return (\n        <div />\n    );\n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":1,"column":27,"nodeType":"14","messageId":"15","endLine":1,"endColumn":35},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]